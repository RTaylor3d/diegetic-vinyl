{
  "version": 3,
  "sources": ["../../music-metadata/lib/common/FourCC.js"],
  "sourcesContent": ["import { stringToUint8Array, uint8ArrayToString } from 'uint8array-extras';\r\nimport * as util from './Util.js';\r\nimport { InternalParserError, FieldDecodingError } from '../ParseError.js';\r\nconst validFourCC = /^[\\x21-\\x7eÂ©][\\x20-\\x7e\\x00()]{3}/;\r\n/**\r\n * Token for read FourCC\r\n * Ref: https://en.wikipedia.org/wiki/FourCC\r\n */\r\nexport const FourCcToken = {\r\n    len: 4,\r\n    get: (buf, off) => {\r\n        const id = uint8ArrayToString(buf.slice(off, off + FourCcToken.len), 'latin1');\r\n        if (!id.match(validFourCC)) {\r\n            throw new FieldDecodingError(`FourCC contains invalid characters: ${util.a2hex(id)} \"${id}\"`);\r\n        }\r\n        return id;\r\n    },\r\n    put: (buffer, offset, id) => {\r\n        const str = stringToUint8Array(id);\r\n        if (str.length !== 4)\r\n            throw new InternalParserError('Invalid length');\r\n        buffer.set(str, offset);\r\n        return offset + 4;\r\n    }\r\n};\r\n//# sourceMappingURL=FourCC.js.map"],
  "mappings": ";;;;;;;;;;;AAGA,IAAM,cAAc;AAKb,IAAM,cAAc;AAAA,EACvB,KAAK;AAAA,EACL,KAAK,CAAC,KAAK,QAAQ;AACf,UAAM,KAAK,mBAAmB,IAAI,MAAM,KAAK,MAAM,YAAY,GAAG,GAAG,QAAQ;AAC7E,QAAI,CAAC,GAAG,MAAM,WAAW,GAAG;AACxB,YAAM,IAAI,mBAAmB,uCAA4C,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG;AAAA,IAChG;AACA,WAAO;AAAA,EACX;AAAA,EACA,KAAK,CAAC,QAAQ,QAAQ,OAAO;AACzB,UAAM,MAAM,mBAAmB,EAAE;AACjC,QAAI,IAAI,WAAW;AACf,YAAM,IAAI,oBAAoB,gBAAgB;AAClD,WAAO,IAAI,KAAK,MAAM;AACtB,WAAO,SAAS;AAAA,EACpB;AACJ;",
  "names": []
}
