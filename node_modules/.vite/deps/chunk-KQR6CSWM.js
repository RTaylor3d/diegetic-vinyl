import {
  a2hex,
  stringToUint8Array,
  uint8ArrayToString
} from "./chunk-4WMHVBW4.js";
import {
  FieldDecodingError,
  InternalParserError
} from "./chunk-H6OQBATF.js";

// node_modules/music-metadata/lib/common/FourCC.js
var validFourCC = /^[\x21-\x7eÂ©][\x20-\x7e\x00()]{3}/;
var FourCcToken = {
  len: 4,
  get: (buf, off) => {
    const id = uint8ArrayToString(buf.slice(off, off + FourCcToken.len), "latin1");
    if (!id.match(validFourCC)) {
      throw new FieldDecodingError(`FourCC contains invalid characters: ${a2hex(id)} "${id}"`);
    }
    return id;
  },
  put: (buffer, offset, id) => {
    const str = stringToUint8Array(id);
    if (str.length !== 4)
      throw new InternalParserError("Invalid length");
    buffer.set(str, offset);
    return offset + 4;
  }
};

export {
  FourCcToken
};
//# sourceMappingURL=chunk-KQR6CSWM.js.map
