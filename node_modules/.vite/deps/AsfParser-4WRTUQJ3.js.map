{
  "version": 3,
  "sources": ["../../music-metadata/lib/asf/AsfParser.js", "../../music-metadata/lib/asf/GUID.js", "../../music-metadata/lib/asf/AsfUtil.js", "../../music-metadata/lib/asf/AsfObject.js"],
  "sourcesContent": ["import initDebug from 'debug';\r\nimport { TrackType } from '../type.js';\r\nimport GUID from './GUID.js';\r\nimport * as AsfObject from './AsfObject.js';\r\nimport { BasicParser } from '../common/BasicParser.js';\r\nimport { AsfContentParseError } from './AsfObject.js';\r\nconst debug = initDebug('music-metadata:parser:ASF');\r\nconst headerType = 'asf';\r\n/**\r\n * Windows Media Metadata Usage Guidelines\r\n * - Ref: https://msdn.microsoft.com/en-us/library/ms867702.aspx\r\n *\r\n * Ref:\r\n * - https://tools.ietf.org/html/draft-fleischman-asf-01\r\n * - https://hwiegman.home.xs4all.nl/fileformats/asf/ASF_Specification.pdf\r\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\r\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\r\n */\r\nexport class AsfParser extends BasicParser {\r\n    async parse() {\r\n        const header = await this.tokenizer.readToken(AsfObject.TopLevelHeaderObjectToken);\r\n        if (!header.objectId.equals(GUID.HeaderObject)) {\r\n            throw new AsfContentParseError(`expected asf header; but was not found; got: ${header.objectId.str}`);\r\n        }\r\n        try {\r\n            await this.parseObjectHeader(header.numberOfHeaderObjects);\r\n        }\r\n        catch (err) {\r\n            debug('Error while parsing ASF: %s', err);\r\n        }\r\n    }\r\n    async parseObjectHeader(numberOfObjectHeaders) {\r\n        let tags;\r\n        do {\r\n            // Parse common header of the ASF Object (3.1)\r\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\r\n            // Parse data part of the ASF Object\r\n            debug('header GUID=%s', header.objectId.str);\r\n            switch (header.objectId.str) {\r\n                case AsfObject.FilePropertiesObject.guid.str: { // 3.2\r\n                    const fpo = await this.tokenizer.readToken(new AsfObject.FilePropertiesObject(header));\r\n                    this.metadata.setFormat('duration', Number(fpo.playDuration / BigInt(1000)) / 10000 - Number(fpo.preroll) / 1000);\r\n                    this.metadata.setFormat('bitrate', fpo.maximumBitrate);\r\n                    break;\r\n                }\r\n                case AsfObject.StreamPropertiesObject.guid.str: { // 3.3\r\n                    const spo = await this.tokenizer.readToken(new AsfObject.StreamPropertiesObject(header));\r\n                    this.metadata.setFormat('container', `ASF/${spo.streamType}`);\r\n                    break;\r\n                }\r\n                case AsfObject.HeaderExtensionObject.guid.str: { // 3.4\r\n                    const extHeader = await this.tokenizer.readToken(new AsfObject.HeaderExtensionObject());\r\n                    await this.parseExtensionObject(extHeader.extensionDataSize);\r\n                    break;\r\n                }\r\n                case AsfObject.ContentDescriptionObjectState.guid.str: // 3.10\r\n                    tags = await this.tokenizer.readToken(new AsfObject.ContentDescriptionObjectState(header));\r\n                    await this.addTags(tags);\r\n                    break;\r\n                case AsfObject.ExtendedContentDescriptionObjectState.guid.str: // 3.11\r\n                    tags = await this.tokenizer.readToken(new AsfObject.ExtendedContentDescriptionObjectState(header));\r\n                    await this.addTags(tags);\r\n                    break;\r\n                case GUID.CodecListObject.str: {\r\n                    const codecs = await AsfObject.readCodecEntries(this.tokenizer);\r\n                    codecs.forEach(codec => {\r\n                        this.metadata.addStreamInfo({\r\n                            type: codec.type.videoCodec ? TrackType.video : TrackType.audio,\r\n                            codecName: codec.codecName\r\n                        });\r\n                    });\r\n                    const audioCodecs = codecs.filter(codec => codec.type.audioCodec).map(codec => codec.codecName).join('/');\r\n                    this.metadata.setFormat('codec', audioCodecs);\r\n                    break;\r\n                }\r\n                case GUID.StreamBitratePropertiesObject.str:\r\n                    // ToDo?\r\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\r\n                    break;\r\n                case GUID.PaddingObject.str:\r\n                    // ToDo: register bytes pad\r\n                    debug('Padding: %s bytes', header.objectSize - AsfObject.HeaderObjectToken.len);\r\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\r\n                    break;\r\n                default:\r\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\r\n                    debug('Ignore ASF-Object-GUID: %s', header.objectId.str);\r\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\r\n            }\r\n        } while (--numberOfObjectHeaders);\r\n        // done\r\n    }\r\n    async addTags(tags) {\r\n        await Promise.all(tags.map(({ id, value }) => this.metadata.addTag(headerType, id, value)));\r\n    }\r\n    async parseExtensionObject(extensionSize) {\r\n        do {\r\n            // Parse common header of the ASF Object (3.1)\r\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\r\n            const remaining = header.objectSize - AsfObject.HeaderObjectToken.len;\r\n            // Parse data part of the ASF Object\r\n            switch (header.objectId.str) {\r\n                case AsfObject.ExtendedStreamPropertiesObjectState.guid.str: // 4.1\r\n                    // ToDo: extended stream header properties are ignored\r\n                    await this.tokenizer.readToken(new AsfObject.ExtendedStreamPropertiesObjectState(header));\r\n                    break;\r\n                case AsfObject.MetadataObjectState.guid.str: { // 4.7\r\n                    const moTags = await this.tokenizer.readToken(new AsfObject.MetadataObjectState(header));\r\n                    await this.addTags(moTags);\r\n                    break;\r\n                }\r\n                case AsfObject.MetadataLibraryObjectState.guid.str: { // 4.8\r\n                    const mlTags = await this.tokenizer.readToken(new AsfObject.MetadataLibraryObjectState(header));\r\n                    await this.addTags(mlTags);\r\n                    break;\r\n                }\r\n                case GUID.PaddingObject.str:\r\n                    // ToDo: register bytes pad\r\n                    await this.tokenizer.ignore(remaining);\r\n                    break;\r\n                case GUID.CompatibilityObject.str:\r\n                    await this.tokenizer.ignore(remaining);\r\n                    break;\r\n                case GUID.ASF_Index_Placeholder_Object.str:\r\n                    await this.tokenizer.ignore(remaining);\r\n                    break;\r\n                default:\r\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\r\n                    // console.log(\"Ignore ASF-Object-GUID: %s\", header.objectId.str);\r\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\r\n                    break;\r\n            }\r\n            extensionSize -= header.objectSize;\r\n        } while (extensionSize > 0);\r\n    }\r\n}\r\n//# sourceMappingURL=AsfParser.js.map", "import { hexToUint8Array, uint8ArrayToHex } from 'uint8array-extras';\r\n/**\r\n * Ref:\r\n * - https://tools.ietf.org/html/draft-fleischman-asf-01, Appendix A: ASF GUIDs\r\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\r\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\r\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\r\n *\r\n * ASF File Structure:\r\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\r\n *\r\n * ASF GUIDs:\r\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\r\n * - https://github.com/dji-sdk/FFmpeg/blob/master/libavformat/asf.c\r\n */\r\nclass GUID {\r\n    static fromBin(bin, offset = 0) {\r\n        return new GUID(GUID.decode(bin, offset));\r\n    }\r\n    /**\r\n     * Decode GUID in format like \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\r\n     * @param objectId Binary GUID\r\n     * @param offset Read offset in bytes, default 0\r\n     * @returns GUID as dashed hexadecimal representation\r\n     */\r\n    static decode(objectId, offset = 0) {\r\n        const view = new DataView(objectId.buffer, offset);\r\n        const guid = `${view.getUint32(0, true).toString(16)}-${view.getUint16(4, true).toString(16)}-${view.getUint16(6, true).toString(16)}-${view.getUint16(8).toString(16)}-${uint8ArrayToHex(objectId.slice(offset + 10, offset + 16))}`;\r\n        return guid.toUpperCase();\r\n    }\r\n    /**\r\n     * Decode stream type\r\n     * @param mediaType Media type GUID\r\n     * @returns Media type\r\n     */\r\n    static decodeMediaType(mediaType) {\r\n        switch (mediaType.str) {\r\n            case GUID.AudioMedia.str: return 'audio';\r\n            case GUID.VideoMedia.str: return 'video';\r\n            case GUID.CommandMedia.str: return 'command';\r\n            case GUID.Degradable_JPEG_Media.str: return 'degradable-jpeg';\r\n            case GUID.FileTransferMedia.str: return 'file-transfer';\r\n            case GUID.BinaryMedia.str: return 'binary';\r\n        }\r\n    }\r\n    /**\r\n     * Encode GUID\r\n     * @param guid GUID like: \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\r\n     * @returns Encoded Binary GUID\r\n     */\r\n    static encode(str) {\r\n        const bin = new Uint8Array(16);\r\n        const view = new DataView(bin.buffer);\r\n        view.setUint32(0, Number.parseInt(str.slice(0, 8), 16), true);\r\n        view.setUint16(4, Number.parseInt(str.slice(9, 13), 16), true);\r\n        view.setUint16(6, Number.parseInt(str.slice(14, 18), 16), true);\r\n        bin.set(hexToUint8Array(str.slice(19, 23)), 8);\r\n        bin.set(hexToUint8Array(str.slice(24)), 10);\r\n        return bin;\r\n    }\r\n    constructor(str) {\r\n        this.str = str;\r\n    }\r\n    equals(guid) {\r\n        return this.str === guid.str;\r\n    }\r\n    toBin() {\r\n        return GUID.encode(this.str);\r\n    }\r\n}\r\n// 10.1 Top-level ASF object GUIDs\r\nGUID.HeaderObject = new GUID(\"75B22630-668E-11CF-A6D9-00AA0062CE6C\");\r\nGUID.DataObject = new GUID(\"75B22636-668E-11CF-A6D9-00AA0062CE6C\");\r\nGUID.SimpleIndexObject = new GUID(\"33000890-E5B1-11CF-89F4-00A0C90349CB\");\r\nGUID.IndexObject = new GUID(\"D6E229D3-35DA-11D1-9034-00A0C90349BE\");\r\nGUID.MediaObjectIndexObject = new GUID(\"FEB103F8-12AD-4C64-840F-2A1D2F7AD48C\");\r\nGUID.TimecodeIndexObject = new GUID(\"3CB73FD0-0C4A-4803-953D-EDF7B6228F0C\");\r\n// 10.2 Header Object GUIDs\r\nGUID.FilePropertiesObject = new GUID(\"8CABDCA1-A947-11CF-8EE4-00C00C205365\");\r\nGUID.StreamPropertiesObject = new GUID(\"B7DC0791-A9B7-11CF-8EE6-00C00C205365\");\r\nGUID.HeaderExtensionObject = new GUID(\"5FBF03B5-A92E-11CF-8EE3-00C00C205365\");\r\nGUID.CodecListObject = new GUID(\"86D15240-311D-11D0-A3A4-00A0C90348F6\");\r\nGUID.ScriptCommandObject = new GUID(\"1EFB1A30-0B62-11D0-A39B-00A0C90348F6\");\r\nGUID.MarkerObject = new GUID(\"F487CD01-A951-11CF-8EE6-00C00C205365\");\r\nGUID.BitrateMutualExclusionObject = new GUID(\"D6E229DC-35DA-11D1-9034-00A0C90349BE\");\r\nGUID.ErrorCorrectionObject = new GUID(\"75B22635-668E-11CF-A6D9-00AA0062CE6C\");\r\nGUID.ContentDescriptionObject = new GUID(\"75B22633-668E-11CF-A6D9-00AA0062CE6C\");\r\nGUID.ExtendedContentDescriptionObject = new GUID(\"D2D0A440-E307-11D2-97F0-00A0C95EA850\");\r\nGUID.ContentBrandingObject = new GUID(\"2211B3FA-BD23-11D2-B4B7-00A0C955FC6E\");\r\nGUID.StreamBitratePropertiesObject = new GUID(\"7BF875CE-468D-11D1-8D82-006097C9A2B2\");\r\nGUID.ContentEncryptionObject = new GUID(\"2211B3FB-BD23-11D2-B4B7-00A0C955FC6E\");\r\nGUID.ExtendedContentEncryptionObject = new GUID(\"298AE614-2622-4C17-B935-DAE07EE9289C\");\r\nGUID.DigitalSignatureObject = new GUID(\"2211B3FC-BD23-11D2-B4B7-00A0C955FC6E\");\r\nGUID.PaddingObject = new GUID(\"1806D474-CADF-4509-A4BA-9AABCB96AAE8\");\r\n// 10.3 Header Extension Object GUIDs\r\nGUID.ExtendedStreamPropertiesObject = new GUID(\"14E6A5CB-C672-4332-8399-A96952065B5A\");\r\nGUID.AdvancedMutualExclusionObject = new GUID(\"A08649CF-4775-4670-8A16-6E35357566CD\");\r\nGUID.GroupMutualExclusionObject = new GUID(\"D1465A40-5A79-4338-B71B-E36B8FD6C249\");\r\nGUID.StreamPrioritizationObject = new GUID(\"D4FED15B-88D3-454F-81F0-ED5C45999E24\");\r\nGUID.BandwidthSharingObject = new GUID(\"A69609E6-517B-11D2-B6AF-00C04FD908E9\");\r\nGUID.LanguageListObject = new GUID(\"7C4346A9-EFE0-4BFC-B229-393EDE415C85\");\r\nGUID.MetadataObject = new GUID(\"C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA\");\r\nGUID.MetadataLibraryObject = new GUID(\"44231C94-9498-49D1-A141-1D134E457054\");\r\nGUID.IndexParametersObject = new GUID(\"D6E229DF-35DA-11D1-9034-00A0C90349BE\");\r\nGUID.MediaObjectIndexParametersObject = new GUID(\"6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7\");\r\nGUID.TimecodeIndexParametersObject = new GUID(\"F55E496D-9797-4B5D-8C8B-604DFE9BFB24\");\r\nGUID.CompatibilityObject = new GUID(\"26F18B5D-4584-47EC-9F5F-0E651F0452C9\");\r\nGUID.AdvancedContentEncryptionObject = new GUID(\"43058533-6981-49E6-9B74-AD12CB86D58C\");\r\n// 10.4 Stream Properties Object Stream Type GUIDs\r\nGUID.AudioMedia = new GUID(\"F8699E40-5B4D-11CF-A8FD-00805F5C442B\");\r\nGUID.VideoMedia = new GUID(\"BC19EFC0-5B4D-11CF-A8FD-00805F5C442B\");\r\nGUID.CommandMedia = new GUID(\"59DACFC0-59E6-11D0-A3AC-00A0C90348F6\");\r\nGUID.JFIF_Media = new GUID(\"B61BE100-5B4E-11CF-A8FD-00805F5C442B\");\r\nGUID.Degradable_JPEG_Media = new GUID(\"35907DE0-E415-11CF-A917-00805F5C442B\");\r\nGUID.FileTransferMedia = new GUID(\"91BD222C-F21C-497A-8B6D-5AA86BFC0185\");\r\nGUID.BinaryMedia = new GUID(\"3AFB65E2-47EF-40F2-AC2C-70A90D71D343\");\r\nGUID.ASF_Index_Placeholder_Object = new GUID(\"D9AADE20-7C17-4F9C-BC28-8555DD98E2A2\");\r\nexport default GUID;\r\n//# sourceMappingURL=GUID.js.map", "import * as Token from 'token-types';\r\nimport * as util from '../common/Util.js';\r\nexport function getParserForAttr(i) {\r\n    return attributeParsers[i];\r\n}\r\nexport function parseUnicodeAttr(uint8Array) {\r\n    return util.stripNulls(util.decodeString(uint8Array, 'utf-16le'));\r\n}\r\nconst attributeParsers = [\r\n    parseUnicodeAttr,\r\n    parseByteArrayAttr,\r\n    parseBoolAttr,\r\n    parseDWordAttr,\r\n    parseQWordAttr,\r\n    parseWordAttr,\r\n    parseByteArrayAttr\r\n];\r\nfunction parseByteArrayAttr(buf) {\r\n    return new Uint8Array(buf);\r\n}\r\nfunction parseBoolAttr(buf, offset = 0) {\r\n    return parseWordAttr(buf, offset) === 1;\r\n}\r\nfunction parseDWordAttr(buf, offset = 0) {\r\n    return Token.UINT32_LE.get(buf, offset);\r\n}\r\nfunction parseQWordAttr(buf, offset = 0) {\r\n    return Token.UINT64_LE.get(buf, offset);\r\n}\r\nfunction parseWordAttr(buf, offset = 0) {\r\n    return Token.UINT16_LE.get(buf, offset);\r\n}\r\n//# sourceMappingURL=AsfUtil.js.map", "// ASF Objects\r\nimport * as Token from 'token-types';\r\nimport * as util from '../common/Util.js';\r\nimport GUID from './GUID.js';\r\nimport { getParserForAttr, parseUnicodeAttr } from './AsfUtil.js';\r\nimport { AttachedPictureType } from '../id3v2/ID3v2Token.js';\r\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\r\nexport class AsfContentParseError extends makeUnexpectedFileContentError('ASF') {\r\n}\r\n/**\r\n * Data Type: Specifies the type of information being stored. The following values are recognized.\r\n */\r\nexport var DataType;\r\n(function (DataType) {\r\n    /**\r\n     * Unicode string. The data consists of a sequence of Unicode characters.\r\n     */\r\n    DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\r\n    /**\r\n     * BYTE array. The type of data is implementation-specific.\r\n     */\r\n    DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\r\n    /**\r\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\r\n     */\r\n    DataType[DataType[\"Bool\"] = 2] = \"Bool\";\r\n    /**\r\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\r\n     */\r\n    DataType[DataType[\"DWord\"] = 3] = \"DWord\";\r\n    /**\r\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\r\n     */\r\n    DataType[DataType[\"QWord\"] = 4] = \"QWord\";\r\n    /**\r\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\r\n     */\r\n    DataType[DataType[\"Word\"] = 5] = \"Word\";\r\n})(DataType || (DataType = {}));\r\n/**\r\n * Token for: 3. ASF top-level Header Object\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\r\n */\r\nexport const TopLevelHeaderObjectToken = {\r\n    len: 30,\r\n    get: (buf, off) => {\r\n        return {\r\n            objectId: GUID.fromBin(buf, off),\r\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16)),\r\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\r\n            // Reserved: 2 bytes\r\n        };\r\n    }\r\n};\r\n/**\r\n * Token for: 3.1 Header Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\r\n */\r\nexport const HeaderObjectToken = {\r\n    len: 24,\r\n    get: (buf, off) => {\r\n        return {\r\n            objectId: GUID.fromBin(buf, off),\r\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16))\r\n        };\r\n    }\r\n};\r\nexport class State {\r\n    constructor(header) {\r\n        this.len = Number(header.objectSize) - HeaderObjectToken.len;\r\n    }\r\n    postProcessTag(tags, name, valueType, data) {\r\n        if (name === 'WM/Picture') {\r\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\r\n        }\r\n        else {\r\n            const parseAttr = getParserForAttr(valueType);\r\n            if (!parseAttr) {\r\n                throw new AsfContentParseError(`unexpected value headerType: ${valueType}`);\r\n            }\r\n            tags.push({ id: name, value: parseAttr(data) });\r\n        }\r\n    }\r\n}\r\n// ToDo: use ignore type\r\nexport class IgnoreObjectState extends State {\r\n    get(buf, off) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Token for: 3.2: File Properties Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\r\n */\r\nexport class FilePropertiesObject extends State {\r\n    get(buf, off) {\r\n        return {\r\n            fileId: GUID.fromBin(buf, off),\r\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\r\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\r\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\r\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\r\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\r\n            preroll: Token.UINT64_LE.get(buf, off + 56),\r\n            flags: {\r\n                broadcast: util.getBit(buf, off + 64, 24),\r\n                seekable: util.getBit(buf, off + 64, 25)\r\n            },\r\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\r\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\r\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\r\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\r\n        };\r\n    }\r\n}\r\nFilePropertiesObject.guid = GUID.FilePropertiesObject;\r\n/**\r\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\r\n */\r\nexport class StreamPropertiesObject extends State {\r\n    get(buf, off) {\r\n        return {\r\n            streamType: GUID.decodeMediaType(GUID.fromBin(buf, off)),\r\n            errorCorrectionType: GUID.fromBin(buf, off + 8)\r\n            // ToDo\r\n        };\r\n    }\r\n}\r\nStreamPropertiesObject.guid = GUID.StreamPropertiesObject;\r\n/**\r\n * 3.4: Header Extension Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\r\n */\r\nexport class HeaderExtensionObject {\r\n    constructor() {\r\n        this.len = 22;\r\n    }\r\n    get(buf, off) {\r\n        const view = new DataView(buf.buffer, off);\r\n        return {\r\n            reserved1: GUID.fromBin(buf, off),\r\n            reserved2: view.getUint16(16, true),\r\n            extensionDataSize: view.getUint16(18, true)\r\n        };\r\n    }\r\n}\r\nHeaderExtensionObject.guid = GUID.HeaderExtensionObject;\r\n/**\r\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\r\n */\r\nconst CodecListObjectHeader = {\r\n    len: 20,\r\n    get: (buf, off) => {\r\n        const view = new DataView(buf.buffer, off);\r\n        return {\r\n            entryCount: view.getUint16(16, true)\r\n        };\r\n    }\r\n};\r\nasync function readString(tokenizer) {\r\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\r\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf-16le'))).replace('\\0', '');\r\n}\r\n/**\r\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\r\n */\r\nexport async function readCodecEntries(tokenizer) {\r\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\r\n    const entries = [];\r\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\r\n        entries.push(await readCodecEntry(tokenizer));\r\n    }\r\n    return entries;\r\n}\r\nasync function readInformation(tokenizer) {\r\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\r\n    const buf = new Uint8Array(length);\r\n    await tokenizer.readBuffer(buf);\r\n    return buf;\r\n}\r\n/**\r\n * Read Codec-Entries\r\n * @param tokenizer\r\n */\r\nasync function readCodecEntry(tokenizer) {\r\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\r\n    return {\r\n        type: {\r\n            videoCodec: (type & 0x0001) === 0x0001,\r\n            audioCodec: (type & 0x0002) === 0x0002\r\n        },\r\n        codecName: await readString(tokenizer),\r\n        description: await readString(tokenizer),\r\n        information: await readInformation(tokenizer)\r\n    };\r\n}\r\n/**\r\n * 3.10 Content Description Object (optional, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\r\n */\r\nexport class ContentDescriptionObjectState extends State {\r\n    get(buf, off) {\r\n        const tags = [];\r\n        const view = new DataView(buf.buffer, off);\r\n        let pos = 10;\r\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\r\n            const length = view.getUint16(i * 2, true);\r\n            if (length > 0) {\r\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\r\n                const end = pos + length;\r\n                tags.push({ id: tagName, value: parseUnicodeAttr(buf.slice(off + pos, off + end)) });\r\n                pos = end;\r\n            }\r\n        }\r\n        return tags;\r\n    }\r\n}\r\nContentDescriptionObjectState.guid = GUID.ContentDescriptionObject;\r\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\r\n/**\r\n * 3.11 Extended Content Description Object (optional, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\r\n */\r\nexport class ExtendedContentDescriptionObjectState extends State {\r\n    get(buf, off) {\r\n        const tags = [];\r\n        const view = new DataView(buf.buffer, off);\r\n        const attrCount = view.getUint16(0, true);\r\n        let pos = 2;\r\n        for (let i = 0; i < attrCount; i += 1) {\r\n            const nameLen = view.getUint16(pos, true);\r\n            pos += 2;\r\n            const name = parseUnicodeAttr(buf.slice(off + pos, off + pos + nameLen));\r\n            pos += nameLen;\r\n            const valueType = view.getUint16(pos, true);\r\n            pos += 2;\r\n            const valueLen = view.getUint16(pos, true);\r\n            pos += 2;\r\n            const value = buf.slice(off + pos, off + pos + valueLen);\r\n            pos += valueLen;\r\n            this.postProcessTag(tags, name, valueType, value);\r\n        }\r\n        return tags;\r\n    }\r\n}\r\nExtendedContentDescriptionObjectState.guid = GUID.ExtendedContentDescriptionObject;\r\n/**\r\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\r\n */\r\nexport class ExtendedStreamPropertiesObjectState extends State {\r\n    get(buf, off) {\r\n        const view = new DataView(buf.buffer, off);\r\n        return {\r\n            startTime: Token.UINT64_LE.get(buf, off),\r\n            endTime: Token.UINT64_LE.get(buf, off + 8),\r\n            dataBitrate: view.getInt32(12, true),\r\n            bufferSize: view.getInt32(16, true),\r\n            initialBufferFullness: view.getInt32(20, true),\r\n            alternateDataBitrate: view.getInt32(24, true),\r\n            alternateBufferSize: view.getInt32(28, true),\r\n            alternateInitialBufferFullness: view.getInt32(32, true),\r\n            maximumObjectSize: view.getInt32(36, true),\r\n            flags: {\r\n                reliableFlag: util.getBit(buf, off + 40, 0),\r\n                seekableFlag: util.getBit(buf, off + 40, 1),\r\n                resendLiveCleanpointsFlag: util.getBit(buf, off + 40, 2)\r\n            },\r\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\r\n            streamNumber: view.getInt16(42, true),\r\n            streamLanguageId: view.getInt16(44, true),\r\n            averageTimePerFrame: view.getInt32(52, true),\r\n            streamNameCount: view.getInt32(54, true),\r\n            payloadExtensionSystems: view.getInt32(56, true),\r\n            streamNames: [], // ToDo\r\n            streamPropertiesObject: null\r\n        };\r\n    }\r\n}\r\nExtendedStreamPropertiesObjectState.guid = GUID.ExtendedStreamPropertiesObject;\r\n/**\r\n * 4.7  Metadata Object (optional, 0 or 1)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\r\n */\r\nexport class MetadataObjectState extends State {\r\n    get(uint8Array, off) {\r\n        const tags = [];\r\n        const view = new DataView(uint8Array.buffer, off);\r\n        const descriptionRecordsCount = view.getUint16(0, true);\r\n        let pos = 2;\r\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\r\n            pos += 4;\r\n            const nameLen = view.getUint16(pos, true);\r\n            pos += 2;\r\n            const dataType = view.getUint16(pos, true);\r\n            pos += 2;\r\n            const dataLen = view.getUint32(pos, true);\r\n            pos += 4;\r\n            const name = parseUnicodeAttr(uint8Array.slice(off + pos, off + pos + nameLen));\r\n            pos += nameLen;\r\n            const data = uint8Array.slice(off + pos, off + pos + dataLen);\r\n            pos += dataLen;\r\n            this.postProcessTag(tags, name, dataType, data);\r\n        }\r\n        return tags;\r\n    }\r\n}\r\nMetadataObjectState.guid = GUID.MetadataObject;\r\n// 4.8\tMetadata Library Object (optional, 0 or 1)\r\nexport class MetadataLibraryObjectState extends MetadataObjectState {\r\n}\r\nMetadataLibraryObjectState.guid = GUID.MetadataLibraryObject;\r\n/**\r\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\r\n */\r\nexport class WmPictureToken {\r\n    static fromBuffer(buffer) {\r\n        const pic = new WmPictureToken(buffer.length);\r\n        return pic.get(buffer, 0);\r\n    }\r\n    constructor(len) {\r\n        this.len = len;\r\n    }\r\n    get(buffer, offset) {\r\n        const view = new DataView(buffer.buffer, offset);\r\n        const typeId = view.getUint8(0);\r\n        const size = view.getInt32(1, true);\r\n        let index = 5;\r\n        while (view.getUint16(index) !== 0) {\r\n            index += 2;\r\n        }\r\n        const format = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\r\n        while (view.getUint16(index) !== 0) {\r\n            index += 2;\r\n        }\r\n        const description = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\r\n        return {\r\n            type: AttachedPictureType[typeId],\r\n            format,\r\n            description,\r\n            size,\r\n            data: buffer.slice(index + 4)\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=AsfObject.js.map"],
  "mappings": "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",
  "names": ["DataType", "initDebug"]
}
